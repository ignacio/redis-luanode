local http = require "luanode.http"
local fs = require "luanode.fs"

if process.platform == "windows" then
	package.path = [[C:\LuaRocks\2.0\lua\?.lua;C:\LuaRocks\2.0\lua\?\init.lua;]] ..
					[[C:\LuaRocks\1.0\lua\?.lua;C:\LuaRocks\1.0\lua\?\init.lua;]] .. package.path
	require "luarocks.require"
end

local json = require "json"

local function write_file(commands, path)

	local out_commands = {}
	for k,v in pairs(commands) do
		table.insert(out_commands, ("\t%q"):format(k:lower()))
	end
	
	local file_contents = ([[
-- This file was generated by ./generate_commands.lua on %s
return {
%s
}
]]):format(os.date("!%Y-%m-%d %H:%M:%S (UTC)"), table.concat(out_commands, ",\n"))

	local f = io.open(path, "w")
	f:write(file_contents)
	f:close()
end

http.createClient(80, "redis.io"):

request("GET", "/commands.json", {
	host = "redis.io"
}):

on("response", function(self, res)
	local body = ""
	console.log("Response from redis.io/commands.json: " .. res.statusCode)
	res:on('data', function (self, chunk)
		body = body .. chunk
	end)

	res:on('end', function ()
		write_file(json.decode(body), "src/redis-luanode/commands.lua")
	end)
end):

on("error", function(self, e, message)
	console.error("Error fetching command list from redis.io: " .. message)
end):

finish()

process:loop()